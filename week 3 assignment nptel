  1 . Write a function contracting(l) that takes as input a list of integer l and returns True 
      if the absolute difference between each adjacent pair of elements strictly decreases.
      
  2.  In a list of integers l, the neighbours of l[i] are l[i-1] and l[i+1]. l[i] is a hill if it is strictly greater than its neighbours and a valley
      if it is strictly less than its neighbours.Write a function counthv(l) that takes as input a list of integers l and returns a list [hc,vc]
      where hc is the number of hills in l and vc is the number of valleys in l.
      
  3. A square nÃ—n matrix of integers can be written in Python as a list with n elements,
      where each element is in turn a list of n integers, representing a row of the matrix.
      For instance, the matrix


def contracting(l):
    for i in range(0,len(l)-2):
        if (abs(l[i+2]-l[i+1])) >=  (abs(l[i+1]-l[i])):
            return False
            break
    return True
 
def counthv(l):
  hv = 0
  vc = 0
  for i in range(1,len(l)-1):    
    if (l[i-1]< l[i]> l[i+1]):
      hv = hv+1
    elif (l[i-1]>l[i]< l[i+1]):
           vc = vc+1
  return [hv,vc]

def shuffle(l):
    l3 = []
    for i in range(len(l[0]),0,-1):
        for j in range(len(l)):
            l3.append(l[j][i-1])
            
    return l3
def leftrotate(l):
    l4 = []
    x= shuffle(l)
    for i in range(0,len(x),len(l)):
        l4.append(x[i:len(l)+i])
    return l4  
